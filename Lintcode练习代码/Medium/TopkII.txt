545. 前K大数 II

实现一个数据结构，提供下面两个接口
1.add(number) 添加一个元素
2.topk() 返回前K大的数

样例

s = new Solution(3);
>> create a new data structure.
s.add(3)
s.add(10)
s.topk()
>> return [10, 3]
s.add(1000)
s.add(-99)
s.topk()
>> return [1000, 10, 3]
s.add(4)
s.topk()
>> return [1000, 10, 4]
s.add(100)
s.topk()
>> return [1000, 100, 10]

思路：和前K大数I 的思想差不多，就是把进数的操作和获取前K数的操作分两个方法写。

进数的时候判断队列大小是否等于K，不等于K就一直进，等于K了就进大出小。
取前K数的时候，把队列的数往list中倒。这里需要两个list，因为倒数的时候，根据优先队列的性质第一个list的数
是从小到大的，这时候把第一个list的数从尾到头添加到第二个list中去。那么返回第二个list就是从大到小的list了。
倒完数后，队列是空队列，因为已经全部都出队列了。这时候把list中的数全部offer回队列就行了。

前几次运行的时候卡在67%不走了，还以为写错了，结果运行完后超过98.9%,惊了。