28. 搜索二维矩阵

写出一个高效的算法来搜索 m × n矩阵中的值。

这个矩阵具有以下特性：

每行中的整数从左到右是排序的。
每行的第一个数大于上一行的最后一个整数。
样例

考虑下列矩阵：

[
  [1, 3, 5, 7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
给出 target = 3，返回 true

挑战

O(log(n) + log(m)) 时间复杂度

思路：因为是从左到右排序，而且下一行的数肯定都会比前一行的数要大。那么判断目标数是在哪一行再从这一行中查找
就行了。判断的做法就是把每一行的最后一个数和目标数比较。