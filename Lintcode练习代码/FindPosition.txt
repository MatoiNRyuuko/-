457. 经典二分查找问题

在一个排序数组中找一个数，返回该数出现的任意位置，如果不存在，返回-1

样例

给出数组 [1, 2, 2, 4, 5, 5].

对于 target = 2, 返回 1 或者 2.
对于 target = 5, 返回 4 或者 5.
对于 target = 6, 返回 -1.
挑战

O(logn) 的时间

思路：二分查找，双指针操作。一次砍一半，中间的数如果大就取小的部分继续砍，如果小就取大的部分继续砍。
有个隐藏条件，如果最小的边界比目标数大，或者最大的边界比目标数小就直接返回-1。不这么做应该也是可以算，
但是时间会多很多，而且lintcode通过不了。