翻转一棵二叉树

样例
  1         1
 / \       / \
2   3  => 3   2
   /       \
  4         4

挑战 
递归固然可行，能否写个非递归的？


思路：递归版本，利用中间变量，将左右子树互换。递归结束点是子树为空。

非递归版本：用的是队列，利用队列先进先出的特性。每次弹出一个根节点，压入这个弹出根节点的两个子树。
在队列中的情况是：第一次：根结点，队列中就一个根节点。 第二次：弹出根节点，交换两个根节点，压入根节点的两个子树。
第三次，交换两个根节点将根节点的左子树弹出，压入左子树的左右子树。第四次，将根节点的右子树弹出，交换两个根节点，压入右子树的左右子树……

直到队列中没有元素，二叉树就完全翻转了。