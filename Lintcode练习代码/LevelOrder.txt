给出一棵二叉树，返回其节点值的层次遍历（逐层从左往右访问）

样例
给一棵二叉树 {3,9,20,#,#,15,7} ：

  3
 / \
9  20
  /  \
 15   7
返回他的分层遍历结果：

[
  [3],
  [9,20],
  [15,7]
]
挑战 
挑战1：只使用一个队列去实现它

挑战2：用DFS算法来做

思路：完成了挑战1，但是用了BFS不是DFS。一开始做的时候思维代码化了，认为广度优先遍历就应该每次队列
弹出一个数进入两个数，但其实这进入了误区。每次我们都将队列里的结点全部弹出的同时，将这些结点的子
结点添加到队列中。具体意思就是每次我们都把同一层的结点全部压入队列，此时队列中的结点都是同一层的。
然后弹出队列中的全部结点，将弹出的结点的子结点全部添加到队列中。此时队列中的结点也全都是同一层的，
是上一层全部结点的全部子结点。但是这个过程是动态的，每弹出一个结点就放入它的子结点。那么怎么知道
要弹出多少个结点？在进行弹出操作之前，把队列的size记录下来，做for循环就可以了。


简而言之，就是每次弹出一层的结点，并添加这一层结点的全部子节点。