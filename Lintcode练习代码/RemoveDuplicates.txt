给定一个排序数组，在原数组中删除重复出现的数字，使得每个元素只出现一次，并且返回新的数组的长度。

不要使用额外的数组空间，必须在原地没有额外空间的条件下完成。

样例
给出数组A =[1,1,2]，你的函数应该返回长度2，此时A=[1,2]。


思路：第一次做这种题目，不知道为什么返回一个int就能返回一个数组了。后来搞懂原来是返回int的同时系统截取
这个A[int]这个数组返回。

一开始做把这道题想复杂了，考虑到各种因素。但是这道题的条件是排序数组，就是数组是已经排序好了的。利用
这个条件，只需要进行一次循环，循环控制一个指针，自定义一个从0开始的指针size。循环开始如果碰到不同的数，
那么A[++size] = A[i]，这句话不但控制了新数组中的每一位都不一样，并且size就是碰到不同数的个数，size+1
就是新数组的长度。

举个例子：A[0] = 0 给定数组A[0,0,1,1,2,3,4] 那么会碰到4次不同的数，size = 4 但是没有包括本身0。
这样输出的输入为A[0,1,2,3] 如果size+1 就是A[0,1,2,3,4]。