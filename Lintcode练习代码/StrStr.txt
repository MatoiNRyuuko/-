对于一个给定的 source 字符串和一个 target 字符串，你应该在 source 字符串中找出 target 字符串出现的第一个位置(从0开始)。如果不存在，则返回 -1。

说明
在面试中我是否需要实现KMP算法？

不需要，当这种问题出现在面试中时，面试官很可能只是想要测试一下你的基础应用能力。当然你需要先跟面试官确认清楚要怎么实现这个题。
样例
如果 source = "source" 和 target = "target"，返回 -1。

如果 source = "abcdabcdefg" 和 target = "bcd"，返回 1。

挑战 
O(n2)的算法是可以接受的。如果你能用O(n)的算法做出来那更加好。（提示：KMP）

思路：暴力算法，时间复杂度是O(n2)，以后有时间研究下KMP算法。 先将字符串转换成字符串数组，然后从第一个元素开始比对，
记录比对的数量，如果相同的数量等于target的长度。那么返回当时比对的第一个元素在source数组中的位置。
另外我知道为什么这道题的通过率这么低了，可能会出现的情况太多了，而且想不到。（["",""]是啥东西？）